{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst form = document.querySelector('form');\ndelayInput.step = 1000;\ndelayInput.spellcheck = false;\ndelayInput.min = 1000;\ndelayInput.defaultValue = 1000;\n\nconst checkIcon = '../check.svg';\nconst errorIcon = '../error.svg'\n\nconsole.dir(delayInput)\n\nform.addEventListener('submit', (event) => {\n    event.preventDefault();\n    const input = document.querySelector('input[name=\"state\"]:checked');\n    const makePromise = ({ value, delay }) => {\n    \n  return new Promise((resolve, reject) => {\n\t   setTimeout(() => {\n\t\t\t\tif(input.value === \"fulfilled\") {\n                    resolve(value);\n\t\t\t\t} else {\n                    reject(value);\n\t\t\t\t}\n\t\t\t}, delay);\n  });\n    };\n    \n    const obj = {\n        value: input.value, \n        delay: +delayInput.value,\n    }\n\n    console.log(typeof obj.delay);\n\n    makePromise(obj)\n        .then(value => \n            iziToast.success({\n            backgroundColor: 'green',\n            iconUrl: checkIcon,\n            theme: 'dark',\n            overlay: false,\n            position: 'topCenter',\n            title: 'OK',\n            titleColor: 'white',\n            message: `Fulfilled promise in ${obj.delay}ms`,\n            messageColor: 'white',\n            overlayColor: 'rgba(0, 0, 0, 0.6)',\n            })\n        )\n        .catch(error =>\n            iziToast.error({\n            backgroundColor: 'red',\n            iconUrl: errorIcon,\n            theme: 'dark',\n            overlay: false,\n            position: 'topCenter',\n            title: 'Error',\n            titleColor: 'white',\n            message: `Rejected promise in ${obj.delay}ms`,\n            messageColor: 'white',\n            overlayColor: 'rgba(0, 0, 0, 0.6)',\n            })\n        );\n}\n)\n"],"names":["delayInput","form","checkIcon","errorIcon","event","input","makePromise","value","delay","resolve","reject","obj","iziToast","error"],"mappings":"oGAGA,MAAMA,EAAa,SAAS,cAAc,qBAAqB,EACzDC,EAAO,SAAS,cAAc,MAAM,EAC1CD,EAAW,KAAO,IAClBA,EAAW,WAAa,GACxBA,EAAW,IAAM,IACjBA,EAAW,aAAe,IAE1B,MAAME,EAAY,eACZC,EAAY,eAElB,QAAQ,IAAIH,CAAU,EAEtBC,EAAK,iBAAiB,SAAWG,GAAU,CACvCA,EAAM,eAAc,EACpB,MAAMC,EAAQ,SAAS,cAAc,6BAA6B,EAC5DC,EAAc,CAAC,CAAE,MAAAC,EAAO,MAAAC,CAAK,IAE9B,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,WAAW,IAAM,CACdL,EAAM,QAAU,YACHI,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAE5B,EAAEC,CAAK,CACX,CAAG,EAGOG,EAAM,CACR,MAAON,EAAM,MACb,MAAO,CAACL,EAAW,KACtB,EAED,QAAQ,IAAI,OAAOW,EAAI,KAAK,EAE5BL,EAAYK,CAAG,EACV,KAAKJ,GACFK,EAAS,QAAQ,CACjB,gBAAiB,QACjB,QAASV,EACT,MAAO,OACP,QAAS,GACT,SAAU,YACV,MAAO,KACP,WAAY,QACZ,QAAS,wBAAwBS,EAAI,KAAK,KAC1C,aAAc,QACd,aAAc,oBAC1B,CAAa,CACJ,EACA,MAAME,GACHD,EAAS,MAAM,CACf,gBAAiB,MACjB,QAAST,EACT,MAAO,OACP,QAAS,GACT,SAAU,YACV,MAAO,QACP,WAAY,QACZ,QAAS,uBAAuBQ,EAAI,KAAK,KACzC,aAAc,QACd,aAAc,oBAC1B,CAAa,CACb,CACA,CACA"}